<!-- {% assign current_variant = product.selected_or_first_available_variant %} -->
<!-- {% assign featured_image = current_variant.featured_image | default: product.featured_image %} -->
<!-- <img src="{{ featured_image | img_url: 'large' }}" alt="{{ featured_image.alt | escape }}" id="ProductPhotoImg">  -->

<!-- eventuell auch mit scrollmagic arbeiten, sectionon soll  -->

  <div class="product-bg">
    <div class="product-content">
      <h1 class="product-title"> {{ product.title }} </h1>
      <h4 class="product-price"> {{ product.price | money }} </h4>
      <div class="product-description"> {{ product.description }} </div>
    </div>

    <div class="seperator"></div>

    <div class="image-selection-container">
      {% for image in product.images %}
        {% assign imageSrcSmall = image | img_url: '100x' %}
        {% assign imageSrcLarge = image | img_url: "large" %}
        <div class="image-selection-selector" style="background-image: url('{{ imageSrcSmall }}')" data-bgurl="{{ imageSrcLarge }}" ></div>
      {% endfor %}
    </div>





    <!-- TODO: 	s. CHEST TO FIT via metatags1!!! -->

    <!-- https://shopify.dev/docs/themes/theme-templates/product-liquid: product variant muss beim submit übergeben werden, quantity = optional  -->
    <!-- url .../car/add?id=999999999 == post form request = url wird von shopify backend abgefangen und fügt dann den entsprechenden artikel/variante mit der id zur cart -->

    <!-- ALTERNATIV ZU FORM TAG: MANUELL <form action="/cart/add" method="post" accept-charset="UTF-8"> -->
    <!-- WICHTIG: name & value-ATTRIBUTES (s.option-tag) müssen mit liquid docs übereinstimmen, damit sie auch via querystring dem shopify endpoint erfolgreich übergeben werden können -->
    <!-- TODO: eventuell eher mit ajax calls arbeiten, da man mit foms sofort zur cart redirected wird -->
    {% form "product", product %}

    <!-- TODO: check if product/variant is in stock!! für produkte die keine varianten haben -->
    {% if product.variants.size > 1 %}
      <div class="variantContainer">
        <label for="productSelect">Size: </label>
        <div class="select-wrapper">
          <select name="id" class="productSelect" id="productSelect">
              {% for variant in product.variants %}
                <option 
                  data-variant-inventory="{{ variant.inventory_quantity }}" 
                  {% if variant == product.selected_or_first_available_variant %} selected {% endif %} 
                  {% if variant.available == blank %} disabled {% endif %} 
                  value="{{ variant.id }}"
                >
                  {{ variant.title }} {% if variant.available == blank %} - sold out {% endif %}
                </option>
              {% endfor %}    
          </select>
        </div>
      </div>
    {% endif %}

      <div class="quantityContainer">
        <label for="quantitySelect">Quantity: </label>
        <div class="quantitySelectContainer">
          <button type="button" class="incrementProductQuantity">+</button>
          <!-- TODO: evenetuell noch mit max=10 ... dann aber auch handleIncrementBtn() und handleDecrementBtn() beachten!  -->
          <input class="quantitySelect" id="quantitySelect" type="number" name="quantity" value="1" min="1">
          <button type="button" class="decrementProductQuantity" disabled>-</button>
        </div>
      </div>
      
      <input type="submit" value="ADD TO BAG" class="add-to-chart-btn">
    {% endform %}
  </div>





  <!-- TODO: METATAGS für measurement values (für xs, small xl etc) wie einzelne größen ausfallen brustunmfang etc  -->
  <!-- ACHTUNG: zb cap und trinkflsche haben natürlch keine measurments.-tabelle -->
<style>
  .select-wrapper::after {
    content: "";
    background-image: url("{{ 'chevron-down-outline.svg' | asset_url }}");
    height: 20px;
    width: 20px;
    top: 8px;
    right: 8px;
    position: absolute;
    pointer-events: none;
  }
</style>




  



<script>
  $(function() {

    let quantityInput = $(".product-bg .quantityContainer .quantitySelect")
    let incrementBtn = $(".incrementProductQuantity")
    let decrementBtn = $(".decrementProductQuantity")

    let addToChartBtn = $("add-to-chart-btn")

    let currentSelectedVariant = $(".productSelect").find("option:selected")

    if (quantityInput.val() > 1) {
      incrementBtn.prop("disabled", false)

    }

    // TODO handle inventory for each variant (min and max product quantity input values)
    incrementBtn.click(function() {
      let inventory = currentSelectedVariant.data("variantInventory");
      let quantitySum = parseInt(quantityInput.val(), 10)

      quantitySum += 1
      quantityInput.val(quantitySum)

      handleIncrementBtn(quantitySum, inventory)
      handleDecrementBtn(quantitySum)
    })

    decrementBtn.click(function() {
      let inventory = currentSelectedVariant.data("variantInventory");
      let quantitySum = parseInt(quantityInput.val(), 10)

      quantitySum -= 1
      quantityInput.val(quantitySum)
      
      handleIncrementBtn(quantitySum, inventory)
      handleDecrementBtn(quantitySum)
    })


    $(document).on("change", ".productSelect" ,function() {
      currentSelectedVariant = $(".productSelect").find("option:selected").first();
      let inventory = currentSelectedVariant.data("variantInventory");
      // console.log("inventory(" +inventory + ") for variant(" + currentSelectedVariant.text() +")");
      // let quantitySum = parseInt(quantityInput.val(), 10)

      // 1 default value von qunatityInput 
      quantityInput.val(1)
      handleDecrementBtn(1)
      handleIncrementBtn(1, inventory)

    })



    // ----- qunatity helpers -----
    function handleIncrementBtn(quantitySum, inventory) {

      if (inventory === quantitySum) {
        incrementBtn.prop("disabled", true)
      } else {
        incrementBtn.prop("disabled", false)
      }
    }


    function handleDecrementBtn(quantitySum) {
      if (quantitySum <= 1 ) {       // damit keine negativen werte decrementiert werden
        decrementBtn.prop("disabled", true)
      } else {
        decrementBtn.prop("disabled", false)
      }
    } 


  })
</script>
